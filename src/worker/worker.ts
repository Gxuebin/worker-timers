// tslint:disable-next-line:max-line-length
export const worker = `!function(){"use strict";var e=new Map,t=new Map,r=function(t){var r=e.get(t);if(void 0===r)throw new Error('There is no interval scheduled with the given id "'+t+'".');clearTimeout(r),e.delete(t)},i=function(e){var r=t.get(e);if(void 0===r)throw new Error('There is no timeout scheduled with the given id "'+e+'".');clearTimeout(r),t.delete(e)},n=function(e,t){var r=void 0,i=void 0;if("performance"in self){var n=performance.now();r=n,i=e-Math.max(0,n-t)}else r=Date.now(),i=e;return{expected:r+i,remainingDelay:i}},o=function e(t,r,i,n){var o="performance"in self?performance.now():Date.now();o>i?postMessage({id:null,method:"call",params:{timerId:r,timerType:n}}):t.set(r,setTimeout(e,i-o,t,r,i,n))},a=function(t,r,i){var a=n(t,i),s=a.expected,d=a.remainingDelay;e.set(r,setTimeout(o,d,e,r,s,"interval"))},s=function(e,r,i){var a=n(e,i),s=a.expected,d=a.remainingDelay;t.set(r,setTimeout(o,d,t,r,s,"timeout"))};addEventListener("message",function(e){var t=e.data;try{if("clear"===t.method){var n=t.id,o=t.params,d=o.timerId,m=o.timerType;if("interval"===m)r(d),postMessage({error:null,id:n});else{if("timeout"!==m)throw new Error('The given type "'+m+'" is not supported');i(d),postMessage({error:null,id:n})}}else{if("set"!==t.method)throw new Error('The given method "'+t.method+'" is not supported');var l=t.params,u=l.delay,p=l.now,v=l.timerId,c=l.timerType;if("interval"===c)a(u,v,p);else{if("timeout"!==c)throw new Error('The given type "'+c+'" is not supported');s(u,v,p)}}}catch(e){postMessage({error:{message:e.message},id:t.id,result:null})}})}();`;
